---
- name: Install samtools from repo (Ubuntu/Debian)
  apt: name={{ item }} state=present 
  sudo: yes
  with_items: 
    - samtools={{ version }}
  when: "ansible_os_family == 'Debian'"
  register: is_app_installed

- name: Check whether samtools have been already installed
  stat: path="{{ install_dir }}/samtools-{{ version }}"
  register: is_app_installed
  when: "ansible_os_family == 'RedHat'"

- name: prepare destination folder in {{ install_dir }} 
  command: mkdir -p {{ install_dir }}/samtools-{{ version }}
  when: is_app_installed.stat.exists == false and ansible_os_family == 'RedHat'

- name: Check whether archive has been previosuly downloaded
  stat: path="{{ download_dir }}/samtools-{{ version }}.tar.bz"
  register: downloaded_archive 
  when: is_app_installed.stat.exists == false and "ansible_os_family == 'RedHat'"

- name: Download archive
  get_url: url='http://downloads.sourceforge.net/project/samtools/samtools/0.1.19/samtools-0.1.19.tar.bz2' dest={{ download_dir }}
  when: is_app_installed.stat.exists == false and downloaded_archive.stat.exists == false and "ansible_os_family == 'RedHat'"
  register: archive

- name: open archive
  command: tar xfj {{ download_dir }}/samtools-{{ version }}.tar.bz2 -C {{ download_dir }}
  when: is_app_installed.stat.exists == false and "ansible_os_family == 'RedHat'"
  register: archive_open

- name: Compile and install
  command: chdir={{ download_dir }}/samtools-{{ version }} {{ item }}
  with_items:
    - make
    - mkdir {{ install_dir }}/samtools-{{ version }}/bin/
    - cp samtools {{ install_dir }}/samtools-{{ version }}/bin/
    - cp bcftools/bcftools {{ install_dir }}/samtools-{{ version }}/bin/
    - cp -ap misc/ {{ install_dir }}/samtools-{{ version }}/
  when: is_app_installed.stat.exists == false and "ansible_os_family == 'RedHat'"

- name: cleanup
  shell: rm -fr {{ download_dir }}/samtools*
